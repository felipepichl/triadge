generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// enum UserRole {
//   ADMIN
//   MEMBER
//   GUEST
// }

model User {
  id          String  @id @default(uuid())
  name        String
  email       String? @unique
  password    String?
  phoneNumber String
  avatar      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UsersTokens UserTokens[]
  Transaction Transaction[]
}

model UserTokens {
  id           String   @id @default(uuid())
  refreshToken String
  expiresDate  DateTime

  users  User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TransactionCategory {
  id          String @id @default(uuid())
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Transaction Transaction[]
}

model Transaction {
  id          String   @id @default(uuid())
  description String
  type        String
  value       Decimal
  date        DateTime @default(now())

  users  User   @relation(fields: [userId], references: [id])
  userId String

  transactionCategory   TransactionCategory @relation(fields: [transactionCategoryId], references: [id])
  transactionCategoryId String
}

model Product {
  id          String  @id @default(uuid())
  name        String
  description String
  costPrice   Decimal
  salePrice   Decimal
  stock       Int
  stockLimit  Int
  avatar      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
  subcategoryId String?

  brand   Brand?  @relation(fields: [brandId], references: [id])
  brandId String?
}

model Category {
  id          String @id @default(uuid())
  name        String
  description String

  products      Product[]
  subcategories Subcategory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subcategory {
  id          String @id @default(uuid())
  name        String
  description String

  products Product[]

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id          String @id @default(uuid())
  name        String
  description String

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
